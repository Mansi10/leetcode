public class Solution {
    // you need to treat n as an unsigned value
    public int hammingWeight(int n) {
        int mask=1;
        int no_of_bits=0;
        for(int i=0; i< 32; i++){
            if((n & mask) !=0){
                no_of_bits++;
            }
            mask <<=1;
        }
        return no_of_bits;
    }
}

-----------------------------------

public class Solution {
    // you need to treat n as an unsigned value
    public int hammingWeight(int n) {
        
        int res=0;
        while(n != 0){
            res += (n%2);
            n= n>>1;
            
        }
        
        return res;
        
    }
}

-------------------------------------


quick process

public class Solution {
    // you need to treat n as an unsigned value
    public int hammingWeight(int n) {
        
        int res=0;
        while(n != 0){
            n = n & (n-1);
            res= res +1;
        }
        
        return res;
        
    }
}





