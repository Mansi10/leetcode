class Solution {
    public int[][] insert(int[][] intervals, int[] newInterval) {
        List<int[]> ans = new ArrayList<>();
        
        int i=0;
        int length= intervals.length;
        
        // safe intervals
        while(i < length && intervals[i][1] < newInterval[0]){
            ans.add(intervals[i]);
            i++;
        }
        
        // merge intervals.. an interval b overlaps with a is b.start <= a.end.
        while(i < length && intervals[i][0] <= newInterval[1]){
            newInterval[0] = Math.min(newInterval[0], intervals[i][0]);
            newInterval[1] = Math.max(newInterval[1], intervals[i][1]);
            i++;
        }
                                                                
        ans.add(newInterval);
        
        // rest of the intervals
        while(i < length){
            ans.add(intervals[i]);
            i++;
        }
        
        int[][] result = new int[ans.size()][2];
        
        int j=0;
        while(j<ans.size()){
            result[j] = ans.get(j);
            j++;
        }
        
        
        return result;
    }
}
