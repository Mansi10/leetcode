
class Solution {
    public int maxProduct(int[] nums) {
        
        if(nums.length == 0)
            return 0;
        
        int maxProduct =nums[0];
        
        for(int i=0; i< nums.length; i++){
            int product=1;
            for(int j=i; j< nums.length; j++){
                product *= nums[j];
                maxProduct= Math.max(maxProduct, product);
            }
        }
        return maxProduct;
    }
}


----------------------------------------------------------


class Solution {
    public int maxProduct(int[] nums) {
        
        if(nums.length == 0)
            return 0;
        
        int max_so_far =nums[0];
        int min_so_far =nums[0];
        int result =max_so_far;
        
        for(int i=1; i< nums.length; i++){
            int curr= nums[i];
            max_so_far= Math.max(curr, Math.max(max_so_far*curr, min_so_far * curr));
            min_so_far= Math.min(curr, Math.min(max_so_far*curr, min_so_far * curr));
            
            result=Math.max(max_so_far, result);
        }
        return result;
    }
}
