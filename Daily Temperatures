TC - O(N)

class Solution {
    public int[] dailyTemperatures(int[] temperatures) {
        int length = temperatures.length;
        
        int[] result = new int[length];
        
        //to store indices in stack
        Stack<Integer> stack = new Stack<>();
        
        for(int i=0; i< length; i++){
            
            while(!stack.isEmpty() && temperatures[stack.peek()] < temperatures[i]){
                //store the difference in the result array at index
                result[stack.peek()] = i - stack.peek();
                stack.pop();
                
            }
            stack.push(i);
        }
        
        return result;
    }
}

------------------------

TC-O(1)

class Solution {
    public int[] dailyTemperatures(int[] temperatures) {
        int n = temperatures.length;
        int hottest = 0;
        int answer[] = new int[n];
        
        for (int currDay = n - 1; currDay >= 0; currDay--) {
            int currentTemp = temperatures[currDay];
            if (currentTemp >= hottest) {
                hottest = currentTemp;
                continue;
            }
            
            int days = 1;
            while (temperatures[currDay + days] <= currentTemp) {
                // Use information from answer to search for the next warmer day
                days += answer[currDay + days];
            }
            answer[currDay] = days;
        }
        
        return answer;
    }
}

