BFS:

class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        
        List<List<Integer>> result = new ArrayList<>();
        if(root == null) 
            return result;
        
        Queue<TreeNode> q = new ArrayDeque<>();
        q.add(root);
        
        boolean rightToLeft = false; //Mark to switch flow
        
        while(!q.isEmpty()){
            
            int sz = q.size();
            
            LinkedList<Integer> lst = new LinkedList<>();
            
             for(int i=0; i< sz;i++){
                TreeNode n = q.poll();

                 if(rightToLeft){ //Scan from right -> left, add to First Element LinkedList, Ex:  9 ->20
                    lst.addFirst(n.val);        
                }else{
                    lst.addLast(n.val);  //Scan from left -> right, add to Last Element LinkedList, Ex: 15 -> 7
                }
                 
                if(n.left !=null) 
                    q.add(n.left); //Check and add next level 
                if(n.right !=null) 
                    q.add(n.right);
                 
            }
            result.add(lst);
            
            rightToLeft = !rightToLeft; //zigzag order
        }
        
        return result;
    }
}
