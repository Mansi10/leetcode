/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseKGroup(ListNode head, int k) {
        int totalCount = 0;
        ListNode dummy = new ListNode(-1);
        dummy.next = head;
        
        if(head == null || k ==1){
            return head;
        }
        
        ListNode curr = head;
        
        while(curr != null){
            totalCount++;
            curr = curr.next;
        }
        
        curr = head;
        ListNode forward = null;
        ListNode prev = dummy;
        
        while(totalCount >= k){
            curr = prev.next;
            forward = curr.next;
            
            for(int i=1; i < k; i++){
                curr.next = forward.next;
                forward.next = prev.next;
                prev.next = forward;
                forward = curr.next;
            }
            
            prev = curr;
            totalCount = totalCount - k;
            
        }
        
        return dummy.next;
    }
}
