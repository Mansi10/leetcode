/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> result = new ArrayList<>();
        
        findPaths(root, targetSum, new ArrayList<Integer>(), result);
        
        return result;
    }

    private void findPaths(TreeNode root, int targetSum, List<Integer> ans, List<List<Integer>> result){
        if(root == null){
            return;
        }
        
        ans.add(root.val);
        if(root.left == null && root.right == null && root.val == targetSum){
            result.add(ans);
            return;
        }
        
        
        findPaths(root.left, targetSum - root.val, new ArrayList<>(ans), result);
        findPaths(root.right, targetSum - root.val, new ArrayList<>(ans), result);
    }
    
}
