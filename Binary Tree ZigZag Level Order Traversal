/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> result = new ArrayList<>();
        
        if(root == null){
            return result;
        }
        
        TreeNode curr = root;
        Queue<TreeNode>  queue = new LinkedList<>();
        queue.add(curr);
        boolean flag = true; 
        
        while(!queue.isEmpty()){
            int size = queue.size();
            List<Integer> level = new ArrayList<>();
            
            for(int i=0; i< size; i++){
                curr = queue.remove();
                // int index = i;
                
                if(flag == true) 
                    level.add(curr.val);
                else 
                    level.add(0, curr.val);
                
                if(curr.left != null){
                    queue.add(curr.left);
                }
                
                if(curr.right != null){
                    queue.add(curr.right);
                }
            }
            flag = !flag; 
            result.add(level);
            
        }
        
        return result;
    }
}
