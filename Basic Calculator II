class Solution {
    public int calculate(String s) {
        Stack<Integer> stack = new Stack<>();
        
        char prevSign = '+';
        int no=0;
        
        for(int i=0; i < s.length(); i++){
            char c  = s.charAt(i);
            
            if(Character.isDigit(c)){
                no = no*10 + (c-'0');
            }
            
            if(isOperator(c) || i == s.length() - 1){
                if(prevSign == '+'){
                    stack.push(no);
                }
                else if(prevSign == '-'){
                    stack.push(-no);
                }
                else if(prevSign == '*'){
                    int top = stack.pop();
                    stack.push(no * top);
                }
                else if(prevSign == '/'){
                    int top = stack.pop();
                    stack.push(top/no);
                }
                //reset variables for next operations
                no=0;
                prevSign=c;
            }
            
        }
        
        int res=0;
        while(!stack.isEmpty()){
            res += stack.pop();
        }
        
        return res;
        
    }
    
    public boolean isOperator(char c){
     return c == '+' || c == '-' || c == '*' || c == '/';    
    }
    
    
}
